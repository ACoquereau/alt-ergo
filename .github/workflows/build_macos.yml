name: Build MacOS

on:
  push:
    branches:
      - next
      - main

jobs:
  install_macos:
    # Test to install all package on mac with opam
    name: Install MacOS

    strategy:
      matrix:
        # Setup the main ocaml version to test
        ocaml-version:
          - 4.10.0
        os:
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve opam cache
        uses: actions/cache@v2
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-alt-ergo-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Set git user
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions-bot@users.noreply.github.com

      - name: Pin no actio
        run: opam pin add . -y --no-action

      - name: Install depext
        run: opam depext -y alt-ergo-lib alt-ergo-parsers alt-ergo altgr-ergo
        # if: steps.cache-opam.outputs.cache-hit != 'true'

      - name: Install deps
        run: opam install -y ./*.opam --deps-only --with-test
        if: steps.cache-opam.outputs.cache-hit != 'true'

      - name: Fixup
        run: opam upgrade --fixup
        if: steps.cache-opam.outputs.cache-hit == 'true'

      - name: Install
        run: opam install .

  tests_macos:
    name: Tests MacOS

    needs:
      - install_macos

    strategy:
      matrix:
        # Setup the main ocaml version to test
        ocaml-version:
          - 4.10.0
        os:
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve opam cache
        uses: actions/cache@v2
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-alt-ergo-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Run non regression tests
        run: opam exec -- rsc/extra/non_regression.sh


  upload_macos:
    # Test to install all package on mac with opam
    name: Upload MacOS

    needs:
      - tests_macos

    strategy:
      matrix:
        # Setup the main ocaml version to test
        ocaml-version:
          - 4.10.0
        os:
          - macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve opam cache
        uses: actions/cache@v2
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-alt-ergo-${{ matrix.ocaml-version }}-${{ hashFiles('*.opam') }}

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Get version and path
        id: get_version_path
        run: |
          echo "::set-output name=version::$(opam exec -- alt-ergo --version)"
          echo "::set-output name=path::$(opam var bin)"

      # Upload Alt-Ergo binary if actions is triggered on next or in a PR
      - name: Upload Alt-Ergo binary
        uses: actions/upload-artifact@v2
        with:
          name: alt-ergo-${{ steps.get_version_path.outputs.version }}-${{ runner.os }}-${{ matrix.ocaml-version }}
          path: "${{ steps.get_version_path.outputs.path }}/alt-ergo"
