name: Build Windows

on:
  push:
    branches:
      - next
      - main

env:
  OCAML_DEFAULT_VERSION: 4.10.0

jobs:
  # All windows, windows cache is buggy so we use only on job to do everything
  all_windows:
    name: All Windows

    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve opam cache
        uses: actions/cache@v2
        id: cache-opam
        with:
          path: ~/.opam
          key: v1-${{ runner.os }}-alt-ergo-${{ env.OCAML_DEFAULT_VERSION }}-${{ hashFiles('*.opam') }}

      - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ env.OCAML_DEFAULT_VERSION }}

      - name: Set git user
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions-bot@users.noreply.github.com

      - name: Pin no actio
        run: opam pin add . -y --no-action

      - name: Install depext
        run: opam depext -y alt-ergo-lib alt-ergo-parsers alt-ergo altgr-ergo
        if: steps.cache-opam.outputs.cache-hit != 'true'

      - name: Install deps
        run: opam install -y ./*.opam --deps-only --with-test
        if: steps.cache-opam.outputs.cache-hit != 'true'

      - name: Fixup
        run: opam upgrade --fixup
        if: steps.cache-opam.outputs.cache-hit == 'true'

      - name: Install
        run: opam install .

      - name: Get version and path
        id: get_version_path
        run: |
          echo "::set-output name=version::$(opam exec -- alt-ergo --version)"
          echo "::set-output name=path::$(opam var bin)"

      - name: Upload Alt-Ergo binary
        uses: actions/upload-artifact@v2
        with:
          name: alt-ergo-${{ steps.get_version_path.outputs.version }}-${{ runner.os }}-${{ env.OCAML_DEFAULT_VERSION }}
          path: "${{ steps.get_version_path.outputs.path }}/alt-ergo.exe"

      - name: Convert non-regression script to dos
        run: |
          dos2unix rsc/extra/non_regression.sh
          dos2unix non-regression/*.sh

      - name: Run non regression tests
        run: opam exec -- rsc/extra/non_regression.sh



################################################################################
# Windows
################################################################################
  # install_windows:
  #   # Test to install all package on different os with opam
  #   name: Install Windows

  #   if: github.event_name == 'pull_request' || github.ref == 'refs/heads/next' || github.ref == 'refs/heads/main'

  #   needs:
  #     - tests_ubuntu

  #   runs-on: windows-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Retrieve opam cache
  #       uses: actions/cache@v2
  #       id: cache-opam
  #       with:
  #         path: ~/.opam
  #         key: v1-${{ runner.os }}-alt-ergo-${{ env.OCAML_DEFAULT_VERSION }}-${{ hashFiles('*.opam') }}

  #     - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
  #       uses: avsm/setup-ocaml@v1
  #       with:
  #         ocaml-version: ${{ env.OCAML_DEFAULT_VERSION }}

  #     - name: Set git user
  #       run: |
  #         git config --global user.name github-actions
  #         git config --global user.email github-actions-bot@users.noreply.github.com

  #     - name: Pin no actio
  #       run: opam pin add . -y --no-action

  #     - name: Install depext
  #       run: opam depext -y alt-ergo-lib alt-ergo-parsers alt-ergo altgr-ergo
  #       # if: steps.cache-opam.outputs.cache-hit != 'true'

  #     - name: Install deps
  #       run: opam install -y ./*.opam --deps-only --with-test
  #       if: steps.cache-opam.outputs.cache-hit != 'true'

  #     - name: Fixup
  #       run: opam upgrade --fixup
  #       if: steps.cache-opam.outputs.cache-hit == 'true'

  #     - name: Install
  #       run: opam install .

  # tests_windows:
  #   name: Tests Windows

  #   # Only if in pull request
  #   if: github.event_name == 'pull_request'

  #   needs:
  #     - install_windows

  #   runs-on: windows-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Retrieve opam cache
  #       uses: actions/cache@v2
  #       id: cache-opam
  #       with:
  #         path: ~/.opam
  #         key: v1-${{ runner.os }}-alt-ergo-${{ env.OCAML_DEFAULT_VERSION }}-${{ hashFiles('*.opam') }}

  #     - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
  #       uses: avsm/setup-ocaml@v1
  #       with:
  #         ocaml-version: ${{ env.OCAML_DEFAULT_VERSION }}

  #     - name: Set git user
  #       run: |
  #         git config --global user.name github-actions
  #         git config --global user.email github-actions-bot@users.noreply.github.com

  #     - name: Pin no actio
  #       run: opam pin add . -y --no-action

  #     - name: Install depext
  #       run: opam depext -y alt-ergo-lib alt-ergo-parsers alt-ergo altgr-ergo
  #       if: steps.cache-opam.outputs.cache-hit != 'true'

  #     - name: Install deps
  #       run: opam install -y ./*.opam --deps-only --with-test
  #       if: steps.cache-opam.outputs.cache-hit != 'true'

  #     - name: Fixup
  #       run: opam upgrade --fixup
  #       if: steps.cache-opam.outputs.cache-hit == 'true'

  #     - name: Install
  #       run: opam install .

  #     - name: Convert non-regression script to dos
  #       run: |
  #         dos2unix rsc/extra/non_regression.sh
  #         dos2unix non-regression/*.sh

  #     - name: Run non regression tests
  #       run: opam exec -- rsc/extra/non_regression.sh

    # upload_windows:
  #   name: Upload Windows

  #   if: github.event_name == 'pull_request' || github.ref == 'refs/heads/next' || github.ref == 'refs/heads/main'

  #   needs:
  #     - install_windows

  #   runs-on: windows-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Retrieve opam cache
  #       uses: actions/cache@v2
  #       id: cache-opam
  #       with:
  #         path: ~/.opam
  #         key: v1-${{ runner.os }}-alt-ergo-${{ env.OCAML_DEFAULT_VERSION }}-${{ hashFiles('*.opam') }}

  #     - name: Use OCaml ${{ env.OCAML_DEFAULT_VERSION }}
  #       uses: avsm/setup-ocaml@v1
  #       with:
  #         ocaml-version: ${{ env.OCAML_DEFAULT_VERSION }}

  #     - name: Get version and path
  #       id: get_version_path
  #       run: |
  #         echo "::set-output name=version::$(opam exec -- alt-ergo --version)"
  #         echo "::set-output name=path::$(opam var bin)"

  #     - name: Upload Alt-Ergo binary
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: alt-ergo-${{ steps.get_version_path.outputs.version }}-${{ runner.os }}-${{ env.OCAML_DEFAULT_VERSION }}
  #         path: "${{ steps.get_version_path.outputs.path }}\alt-ergo"
